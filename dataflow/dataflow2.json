{
	"name": "dataflow2",
	"properties": {
		"type": "MappingDataFlow",
		"typeProperties": {
			"sources": [
				{
					"dataset": {
						"referenceName": "V2_PET_LICENSE",
						"type": "DatasetReference"
					},
					"name": "sourceStg"
				},
				{
					"dataset": {
						"referenceName": "EDW_Breed_DIM",
						"type": "DatasetReference"
					},
					"name": "BreedDimMaxID"
				},
				{
					"dataset": {
						"referenceName": "EDW_Breed_DIM",
						"type": "DatasetReference"
					},
					"name": "sourceBreedDim"
				}
			],
			"sinks": [],
			"transformations": [
				{
					"name": "join1",
					"description": "Custom (cross) join on 'sourceStg' and 'BreedDimMaxID'"
				},
				{
					"name": "aggregateBreedKeys"
				},
				{
					"name": "joinToTarget"
				},
				{
					"name": "filterExistingRows"
				}
			],
			"scriptLines": [
				"source(output(",
				"          LICENSE_ISSUE_DATE as string,",
				"          LICENSE_NUMBER as string,",
				"          ANIMAL_NAME as string,",
				"          SPECIES as string,",
				"          PRIMARY_BREED as string,",
				"          SECONDARY_BREED as string,",
				"          ZIP_CODE as string,",
				"          DI_JOB_ID as string,",
				"          DI_LOAD_DT as string,",
				"          JOB_ID as string,",
				"          LOAD_DT as string",
				"     ),",
				"     allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     format: 'table') ~> sourceStg",
				"source(output(",
				"          BREED_SK as string,",
				"          START_DT as string,",
				"          END_DT as string,",
				"          IS_CURRENT as string,",
				"          BREED_DK as string,",
				"          SPECIES_NAME as string,",
				"          PRIMARY_BREED_NAME as string,",
				"          SECONDARY_BREED_NAME as string,",
				"          DI_JOB_ID as string,",
				"          DI_LOAD_DT as string",
				"     ),",
				"     allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     format: 'table') ~> BreedDimMaxID",
				"source(output(",
				"          BREED_SK as string,",
				"          START_DT as string,",
				"          END_DT as string,",
				"          IS_CURRENT as string,",
				"          BREED_DK as string,",
				"          SPECIES_NAME as string,",
				"          PRIMARY_BREED_NAME as string,",
				"          SECONDARY_BREED_NAME as string,",
				"          DI_JOB_ID as string,",
				"          DI_LOAD_DT as string",
				"     ),",
				"     allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     format: 'table') ~> sourceBreedDim",
				"sourceStg, BreedDimMaxID join(1== 1,",
				"     joinType:'cross',",
				"     matchType:'exact',",
				"     ignoreSpaces: false,",
				"     broadcast: 'auto')~> join1",
				"join1 aggregate(groupBy(SPECIES,",
				"          PRIMARY_BREED,",
				"          SECONDARY_BREED,",
				"          BREED_SK)) ~> aggregateBreedKeys",
				"aggregateBreedKeys, sourceBreedDim join(PRIMARY_BREED == PRIMARY_BREED_NAME",
				"     && SECONDARY_BREED == SECONDARY_BREED_NAME",
				"     && SPECIES == SPECIES_NAME,",
				"     joinType:'left',",
				"     matchType:'exact',",
				"     ignoreSpaces: false,",
				"     broadcast: 'auto')~> joinToTarget",
				"joinToTarget filter(isNull(SPECIES_NAME) && isNull(PRIMARY_BREED_NAME) && isNull(SECONDARY_BREED_NAME)\r",
				") ~> filterExistingRows"
			]
		}
	}
}